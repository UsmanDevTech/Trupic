
@{
    ViewBag.Title = "Category";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<style>
    .mt-16 {
        margin-top: 16px !important;
    }

    .mt-25 {
        margin-top: 25px !important;
    }
</style>
<section class="content">
    <div class="container-fluid">
        <div class="row clearfix">
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                <div class="card">
                    <div class="header">
                        <div style="display:flex;flex-direction:row">
                            <a class="btn btn-primary" data-toggle="modal" data-target="#AddCateogry" style="margin-top: 5px;padding-top: 8px;">Add Category</a>

                            <ul class="header-dropdown m-r--5">
                                <li class="dropdown">
                                    <a href="javascript:void(0);" class="dropdown-toggle" data-toggle="dropdown" role="button"
                                       aria-haspopup="true" aria-expanded="false">
                                        <i class="material-icons">more_vert</i>
                                    </a>
                                    <ul class="dropdown-menu pull-right" style="width: max-content;">
                                        <li>
                                            <a id="all" href="javascript:void(0);">All</a>
                                        </li>
                                        <li>
                                            <a id="insta" href="javascript:void(0);">Insta Cateogry</a>
                                        </li>
                                        <li>
                                            <a id="post" href="javascript:void(0);">Post Category</a>
                                        </li>
                                    </ul>
                                </li>
                            </ul>
                        </div>
                    </div>
                    <div class="body">
                        <div class="table-responsive w-100">
                            <table class="table table-bordered table-striped  table-hover dataTable w-100" id="example_4">
                                <thead style="white-space:nowrap">
                                    <tr>
                                        <th>Type</th>
                                        <th>Picture</th>
                                        <th>Title</th>
                                        <th>Color</th>
                                        <th>Tags</th>
                                        <th>Created At</th>
                                        <th>Status</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody style="white-space:nowrap" id="divtbl">
                                </tbody>

                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>

    <div style="" class="modal fade bs-example-modal-md" id="showtags" tabindex="-1" role="dialog" aria-labelledby="showtags" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <div id="addTagButton"></div>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">x</span>
                    </button>
                </div>
                <div class="modal-body">

                    <div class="table-responsive" style="overflow-y: scroll !important; height: 500px !important">
                        <table class="table table-bordered dataTable" id="tagtable">
                            <thead style="white-space:nowrap">
                                <tr>
                                    <th>Name</th>
                                    <th>Color</th>
                                    <th>Font Family</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody style="white-space:nowrap;" id="tagtablebody">
                            </tbody>

                        </table>
                    </div>

                </div>
            </div>
        </div><!-- /.modal -->
    </div>

    <!-- /.modal -->

    <div style="" class="modal fade bs-example-modal-md" id="editTag" tabindex="-1" role="dialog" aria-labelledby="editTag" aria-hidden="true">
        <div class="modal-dialog modal-md">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="formModal">Edit Tag</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">×</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form class="editForm">
                        <input type="hidden" id="edit_tag_Id" />
                        <input type="hidden" id="edit_cat_Id" />
                        <div class="row clearfix">
                            <div class="col-sm-12 col-md-6 col-12">
                                <div class="form-group">
                                    <div class="form-line">
                                        <input id="edit_name" type="text" class="form-control" placeholder="Name" required>
                                    </div>
                                </div>
                            </div>

                            <div class="col-sm-12 col-md-6 col-12">
                                <div class="form-group">
                                    <div class="form-line">
                                        <input id="edit_color" type="color" class="form-control" placeholder="Color" required>
                                    </div>
                                </div>
                            </div>

                            <div class="col-sm-12">
                                <div class="form-group">
                                    <label>Select Font Style</label>
                                    <select class="form-control" id="edit_font_style" required>
                                        <option value="Times New Roman">Times New Roman</option>
                                        <option value="Georgia">Georgia</option>
                                        <option value="lobster">lobster</option>
                                        <option value="grape nuts">grape nuts</option>
                                        <option value="slackey">slackey</option>
                                        <option value="henny penny">henny penny</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                    </form>

                    <div style="float:right">
                        <button type="button" class="btn bg-red m-t-15 waves-effect text-white" data-dismiss="modal">Close</button>
                        <button id="editTagButton" onclick="edit_tag()" class="btn Custom-Badge-Color m-t-15 waves-effect text-white">Save</button>
                    </div>

                </div>
            </div>
        </div><!-- /.modal -->
    </div>

    <div style="" class="modal fade bs-example-modal-md" id="editCategoryModal" tabindex="-1" role="dialog" aria-labelledby="editCategoryModal" aria-hidden="true">
        <div class="modal-dialog modal-md">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="formModal">Edit Category</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">×</span>
                    </button>
                </div>
                <div class="modal-body">
                    <input type="hidden" id="edit_Id" />
                    <input type="hidden" id="edit_cat_url" />
                    <form class="row clearfix" id="form_edit_category">

                        <div class="col-sm-12 col-md-6 col-12">
                            <div class="form-group">
                                <div class="file-field input-field">
                                    <div class="btn btn-primary">
                                        <span>Update Picture</span>
                                        <input id="edit_cat_file" type="file">
                                    </div>
                                    <div class="file-path-wrapper">
                                        <input class="file-path validate" type="text">
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-6 col-12">
                            <div class="form-group">
                                <label>Category Type</label>
                                <select class="form-control" id="edit_category_type" required>
                                    <option value="0">Insta category</option>
                                    <option value="1">Post Category</option>
                                </select>
                            </div>
                        </div>

                        <div class="col-sm-12 col-md-6 col-12">
                            <div class="form-group">
                                <div class="form-line">
                                    <input id="edit_cat_name" type="text" class="form-control" maxlength="35" placeholder="Name" readonly>
                                </div>
                            </div>
                        </div>

                        <div class="col-sm-12 col-md-6 col-12">
                            <div class="form-group">
                                <div class="form-line">
                                    <input id="edit_cat_color" type="color" class="form-control" placeholder="Color" required>
                                </div>
                            </div>
                        </div>


                    </form>

                    <div style="float:right">
                        <button type="button" class="btn bg-red m-t-15 waves-effect text-white" data-dismiss="modal">Close</button>
                        <button id="editCategoryButton" onclick="edit_loadfile()" class="btn Custom-Badge-Color m-t-15 waves-effect text-white">Save</button>
                    </div>

                </div>
            </div>
        </div><!-- /.modal -->
    </div>

    <div style="" class="modal fade bs-example-modal-md" id="AddCateogry" data-backdrop="static" data-keyboard="false" tabindex="-1" role="dialog" aria-labelledby="AddCateogry" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="formModal">Add Category</h5>
                    <button type="button" class="close cls" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">×</span>
                    </button>
                </div>
                <div class="modal-body">

                    <form id="addCategoryForm" class="row clearfix">

                        <div class="col-sm-12 col-md-6 col-12">
                            <div class="form-group">
                                <div class="file-field input-field">
                                    <div class="btn btn-primary">
                                        <span>Upload Picture</span>
                                        <input id="add_category_file" type="file" required>
                                    </div>
                                    <div class="file-path-wrapper">
                                        <input class="file-path validate" type="text" required>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-6 col-12">
                            <div class="form-group">
                                <label>Category Type</label>
                                <select class="form-control" id="add_category_type" required>
                                    <option value="0">Insta category</option>
                                    <option value="1">Post Category</option>
                                </select>
                            </div>
                        </div>

                        <div class="col-sm-12 col-md-6 col-12">
                            <div class="form-group">
                                <div class="form-line">
                                    <input id="add_category_title" type="text" maxlength="35" class="form-control" placeholder="Title" required>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-6 col-12">
                            <div class="form-group">
                                <div class="form-line">
                                    <input id="add_category_color" type="color" class="form-control">
                                </div>
                            </div>
                        </div>

                        <div class="col-12">
                            <button id="num" type="button" class="btn btn-primary">Add Tag</button>
                            <div id="targetDIV"></div>
                        </div>

                    </form>

                    <div style="float:right">
                        <button type="button" class="btn bg-red m-t-15 waves-effect cls" style="color:white" data-dismiss="modal">Close</button>
                        <button id="submitButton" onclick="loadfile()" class="btn Custom-Badge-Color m-t-15 waves-effect text-white">Save</button>
                    </div>

                </div>
            </div>
        </div><!-- /.modal -->
    </div>

    <div style="" class="modal fade bs-example-modal-md" id="addTag" tabindex="-1" role="dialog" aria-labelledby="addTag" aria-hidden="true">
        <div class="modal-dialog modal-md">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="formModal">Add Tag</h5>

                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">×</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form id="addtagForm">
                        <input type="hidden" id="add_tag_cat_Id" />
                        <div class="row clearfix">
                            <div class="col-sm-12 col-md-6 col-12">
                                <div class="form-group">
                                    <div class="form-line">
                                        <input id="add_tag_name" type="text" class="form-control" placeholder="Name" required>
                                    </div>
                                </div>
                            </div>

                            <div class="col-sm-12 col-md-6 col-12">
                                <div class="form-group">
                                    <div class="form-line">

                                        <input id="add_tag_color" type="color" class="form-control" placeholder="Color" required>
                                    </div>
                                </div>
                            </div>

                            <div class="col-sm-12">
                                <div class="form-group">
                                    <label>Select Font Style</label>
                                    <select class="form-control" id="add_tag_font_style" required>
                                        <option value="Times New Roman">Times New Roman</option>
                                        <option value="Georgia">Georgia</option>
                                        <option value="lobster">lobster</option>
                                        <option value="grape nuts">grape nuts</option>
                                        <option value="slackey">slackey</option>
                                        <option value="henny penny">henny penny</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                    </form>

                    <div style="float:right">
                        <button type="button" class="btn bg-red m-t-15 waves-effect text-white" data-dismiss="modal">Close</button>
                        <button id="addTagButton" onclick="addTagFunction()" class="btn Custom-Badge-Color m-t-15 waves-effect text-white">Update</button>
                    </div>

                </div>
            </div>
        </div>
    </div>
</section>


<script>
    var indexList = [];
    var i = 0;
    $('#category_li').addClass("active");
    $('#num').on('click', function () {

        $("#targetDIV").append(`<div class="row clearfix border rounded my-2 py-2" id="a${i}">
                            <div class="col-lg-4 col-md-6">
                                <div class="form-group">
                                        <input id="add_tag_name${i}" type="text" class="form-control mt-16" placeholder="Name" required>
                                </div>
                            </div>

                            <div class="col-lg-2 col-md-6">
                                <div class="form-group">
                                        <input id="add_tag_color${i}" type="color" class="form-control mt-25" placeholder="Color" required>
                                </div>
                            </div>

                            <div class="col-lg-4 col-md-6">
                                <div class="form-group" >
                                    <label>Select Font Style</label>
                                    <select class="form-control" id="add_tag_font_style${i}" required>
                                        <option value="Times New Roman">Times New Roman</option>
                                        <option value="Georgia">Georgia</option>
                                        <option value="lobster">lobster</option>
                                        <option value="grape nuts">grape nuts</option>
                                        <option value="slackey">slackey</option>
                                        <option value="henny penny">henny penny</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-2 col-sm-12">
                                <a onclick="delIndex(${i})" class="btn btn-danger mt-4"><i class="fas fa-trash"></i></a>
                            </div>
                        </div>`);
        indexList.push(i);
        i++;
    });

    $('.cls').on('click', function () {
        $("#targetDIV").html("");
        indexList = [];
        i = 0;
    })

    function delIndex(i) {

        const index = indexList.indexOf(i);
        if (index > -1) {
            indexList.splice(index, 1);
            $('#a' + i).addClass('d-none');
        }
    }

    $('#event_main').addClass("active");
    $('#eventcat').addClass("active");

    $(function () {
        loadData();
    })

    function loadData() {

        db.collection("categories").onSnapshot((querySnapshot) => {
            if (querySnapshot.size > 0) {

                $('#example_4').DataTable().destroy();
                $("#divtbl").html('');

                var s = querySnapshot.docs.map(doc => {
                    return doc.data();
                });

                s.forEach((d) => {
                    var date_val = convertStampDate(d.created_at.seconds);

                    var btn = '<td>---</td>'
                    var badge = '';

                    if (d.category_type == 0) {
                       
                            d.status == true ?
                                btn = '<td><button class="btn btn-primary mr-1 editCategory rounded" data-toggle="modal" data-id="' + d.cat_id + '" data-color="' + d.color + '" data-name="' + d.name + '" data-url="' + d.url + '" data-type="' + d.category_type + '"><i class="fas fa-edit text-white"></i></button><button onclick="status(\'' + d.cat_id + '\', 1)" class="btn bg-red rounded"><i class="fas fa-ban text-white"></i></button></td>' :
                                btn = '<td><button onclick="status(\'' + d.cat_id + '\', 2)" class="btn Custom-Badge-Color rounded"><i style="color:white" class="far fa-check-circle"></i></button></td>';
                       
                        d.status == true ? badge = '<td><span class="badge shadow-style text-white rounded border-0 Custom-Badge-Color">Active</span></td>' :
                            badge = '<td><span class="badge shadow-style text-white rounded border-0 bg-red">Blocked</span></td>';


                        $("#divtbl").append('<tr data-attribute="2"><td>Insta Category</td><td style="width:8%"><a class="image-popup-vertical-fit" href="' + d.url + '"> <img src="' + d.url + '" width="35" height="35"/> </a></td><td>' + d.name + '</td><td><div class="p-3" style="background-color:#' + d.color + '"></div></td><td><button class="btn btn-primary showtags rounded" data-id="' + d.cat_id + '"><i class="fas fa-tags"></i></button></td><td>' + date_val + '</td>' + badge + '' + btn + '</tr>');
                    }
                    else if (d.category_type == 1) {

                        d.status == true ?
                            btn = '<td><button class="btn btn-primary mr-1 editCategory rounded" data-toggle="modal" data-id="' + d.cat_id + '" data-color="' + d.color + '" data-name="' + d.name + '" data-url="' + d.url + '" data-type="' + d.category_type + '"><i class="fas fa-edit text-white"></i></button><button onclick="status(\'' + d.cat_id + '\', 1)" class="btn bg-red rounded"><i class="fas fa-ban text-white"></i></button></td>' :
                            btn = '<td><button onclick="status(\'' + d.cat_id + '\', 2)" class="btn Custom-Badge-Color rounded"><i style="color:white" class="far fa-check-circle"></i></button></td>';

                        d.status == true ? badge = '<td><span class="badge shadow-style text-white rounded border-0 Custom-Badge-Color">Active</span></td>' :
                            badge = '<td><span class="badge shadow-style text-white rounded border-0 bg-red">Blocked</span></td>';


                        $("#divtbl").append('<tr data-attribute="1"><td>Post Category</td><td style="width:8%"><a class="image-popup-vertical-fit" href="' + d.url + '"> <img src="' + d.url + '" width="35" height="35"/> </a></td><td>' + d.name + '</td><td><div class="p-3" style="background-color:#' + d.color + '"></div></td><td><button class="btn btn-primary showtags rounded" data-id="' + d.cat_id + '"><i class="fas fa-tags"></i></button></td><td>' + date_val + '</td>' + badge + '' + btn + '</tr>');

                    }

                    if (s.indexOf(d) == s.length - 1) {
                        var table = $('#example_4').DataTable({

                            scrollY: "400px",
                            scrollCollapse: true,
                            scrollX: true,
                            "lengthMenu": [[10, 25, 50, -1], [10, 25, 50, "All"]]
                        });
                        $.fn.dataTable.ext.search.pop();
                        table.draw();
                        $('.image-popup-vertical-fit').magnificPopup({
                            type: 'image',
                            closeOnContentClick: true,
                            mainClass: 'mfp-img-mobile',
                            image: {
                                verticalFit: true
                            }

                        });
                    }
                })
            }
            else $("#example_4").DataTable();
        });
    }

    //Modal open


    //Show tags start
    $(document).on("click", ".showtags", function () {
        var id = $(this).data('id');
        showtags(id)
    });

    function showtags(cat_id) {


        $('#tagtable').DataTable().destroy();
        $("#tagtablebody").html('');

        $('#addTagButton').html("");

        var addbtn = '<button data-id="' + cat_id + '" class="btn btn-primary rounded addTagModal">Add Tag</button>';
       
        $('#addTagButton').append(addbtn);

        db.collection("categories").doc(cat_id.toString()).get().then(function (doc) {
            if (doc.exists) {
                var data = doc.data();

                for (var i = 0; i < data.tags.length; i++) {
                    var btn = '<button class="btn btn-primary mr-1 edit rounded" data-color="' + data.tags[i].color + '" data-name="' + data.tags[i].name + '" data-font="' + data.tags[i].font_family + '" data-id="' + data.tags[i].id + '" data-catid="' + cat_id + '"><i class="fas fa-edit text-white"></i></button><button onclick="del(\'' + data.cat_id + '\', \'' + data.tags[i].id + '\')" class="btn bg-red rounded"><i class="fas fa-times-circle text-white"></i></button>';
                 
                    $("#tagtablebody").append('<tr><td>' + data.tags[i].name + '</td><td><div class="p-3" style="background-color:#' + data.tags[i].color + '"></div></td><td>' + data.tags[i].font_family + '</td><td>' + btn + '</td></tr >');
                }
            }
        }).then(function () {
            var table = $('#tagtable').DataTable({});
            $.fn.dataTable.ext.search.pop();
            table.draw();

            $('#showtags').modal("show");
        }).catch(function (error) {
            console.log("Error getting documents: ", error);
        });
    }

    function del(cat_Id, index) {

        swal.fire({
            title: 'Are you sure, you want to delete the tag?',
            icon: 'warning',
            confirmButtonColor: '#3085d6',
            confirmButtonText: 'Yes, Delete it!',
            allowOutsideClick: false
        }).then((result) => {

            if (result.isConfirmed) {
                db.collection('categories').doc(cat_Id).get().then((doc) => {
                    var data = doc.data();

                    var tags = [];

                    for (var j = 0; j < data.tags.length; j++) {
                        tags.push(data.tags[j]);
                    }

                    tags.splice(index, 1);
                    db.collection("categories").doc(cat_Id).update({
                        tags: tags,

                    }).then(() => {
                        Swal.fire({
                            icon: 'success',
                            title: 'Tag deleted',
                            showConfirmButton: false,
                            timer: 1500
                        }).then(function () {
                            showtags(cat_Id);
                        });
                    })
                })
            }


        });

    }
    //Show tags end

    //event category add
    function loadfile() {

        const Toast = Swal.mixin({
            toast: true,
            position: 'top-end',
            showConfirmButton: false,
            timer: 3000,
            timerProgressBar: true,
            didOpen: (toast) => {
                toast.addEventListener('mouseenter', Swal.stopTimer)
                toast.addEventListener('mouseleave', Swal.resumeTimer)
            }
        })

        $('#submitButton').css('pointer-events', 'none');

        var logo = $('#add_category_file').val();
        var title = $("#add_category_title").val();
        var color = $("#add_category_color").val();

        if (logo == "") {
            Toast.fire({
                icon: 'warning',
                title: 'Please select category picture!'
            })
            $('#submitButton').css('pointer-events', 'all');
        }

        else if (title.trim() == "") {

            $('#submitButton').html("Save");
            $('#submitButton').removeClass("btn-progress1");

            Toast.fire({
                icon: 'warning',
                title: 'Please provide category title!'
            })
            $('#submitButton').css('pointer-events', 'all');
        }
        else if (color.trim() == "") {

            $('#submitButton').html("Save");
            $('#submitButton').removeClass("btn-progress1");

            Toast.fire({
                icon: 'warning',
                title: 'Please provide category color!'
            })
            $('#submitButton').css('pointer-events', 'all');
        }
        else {
            $('#submitButton').html("");
            $('#submitButton').addClass("btn-progress1");

            var logo_file = $("#add_category_file").get(0).files[0];
            var filename = (+new Date()) + '-' + logo_file.name;
            var metadata = { contentType: logo_file.type };
            var storageRef = firebase.storage();
            var task = storageRef.ref('categories/' + filename).put(logo_file, metadata);

            task.on('state_changed',
                function progress(snapshot) {

                },
                function error(err) {
                    console.log("Warning", err, "error", 6000);
                },
                function complete() {
                    task.snapshot.ref.getDownloadURL()
                        .then(function (downloadURL) {
                            logo = downloadURL;
                            AddCategory(logo, color, title)
                        })
                });
        }
    }
    function AddCategory(logo, color, title) {
        const Toast = Swal.mixin({
            toast: true,
            position: 'top-end',
            showConfirmButton: false,
            timer: 3000,
            timerProgressBar: true,
            didOpen: (toast) => {
                toast.addEventListener('mouseenter', Swal.stopTimer)
                toast.addEventListener('mouseleave', Swal.resumeTimer)
            }
        })

        var category = $('#add_category_type').val();

        var emptyCheck = false;
        var tagList = [];

        for (var i = 0; i < indexList.length; i++) {

            var index = indexList[i];

            var tagtitle = $('#add_tag_name' + index).val();
            var tagcolor = $('#add_tag_color' + index).val();
            var tagfont = $('#add_tag_font_style' + index).val();


            if (tagtitle.trim() == "") {
                emptyCheck = true;
            }
            else if (tagcolor.trim() == "") {
                emptyCheck = true;
            }
            else if (tagfont.trim() == "") {
                emptyCheck = true;
            }
            else {
                const tagColorCode = tagcolor.slice(1);

                var newTag = {
                    color: tagColorCode,
                    font_family: tagfont,
                    name: tagtitle,
                    id: indexList.indexOf(indexList[i]),
                    count: 1,
                };

                tagList.push(newTag);
            }
        }

        if (emptyCheck == true) {

            $('#submitButton').html("Save");
            $('#submitButton').removeClass("btn-progress1");

            Toast.fire({
                icon: 'warning',
                title: 'Please fill all fields!'
            })
            $('#submitButton').css('pointer-events', 'all');
        }
        else {
            const colorCode = color.slice(1);

            var doc = db.collection("categories").doc();
            doc.set({
                cat_id: doc.id,
                category_type: parseInt(category),
                color: colorCode,
                created_at: new Date(),
                name: title,
                url: logo,
                status: true,
                tags: tagList,
            }).then(() => {

                Toast.fire({
                    icon: 'success',
                    title: 'Category added successfully!'
                })
                setTimeout(function () {
                    $("#targetDIV").html("");
                    indexList = [];
                    i = 0;
                    document.getElementById('addCategoryForm').reset();

                    loadData();

                    $('#submitButton').html("Save");
                    $('#submitButton').removeClass("btn-progress1");
                    $('#submitButton').css('pointer-events', 'all');

                    $('#AddCateogry').modal("hide");

                }, 2000);
            }).catch((error) => {
                console.error("Error writing document: ", error);
            });
        }
    }

    //edit category
    $(document).on("click", ".editCategory", function () {
        $("#edit_Id").val($(this).data('id'));

        $("#edit_cat_color").val("#" + $(this).data('color'));
        $("#edit_cat_name").val($(this).data('name'));
        $("#edit_cat_url").val($(this).data('url'));
        var type = $(this).data('type');

        $(`#edit_category_type option[value=${type}]`).attr('selected', 'selected');
        $("#edit_category_type").val(type).change();
        $('#edit_category_type').prop("disabled", true);


        $('#editCategoryModal').modal("show");
    });

    function edit_loadfile() {

        $('#editCategoryButton').css('pointer-events', 'none');

        var logo = $('#edit_cat_file').val();

        if (logo == "") {
            edit_category(logo)
        }
        else {

            var logo_file = $("#edit_cat_file").get(0).files[0];
            var filename = (+new Date()) + '-' + logo_file.name;
            var metadata = { contentType: logo_file.type };
            var storageRef = firebase.storage();
            var task = storageRef.ref('categories/' + filename).put(logo_file, metadata);

            task.on('state_changed',
                function progress(snapshot) {

                },
                function error(err) {
                    console.log("Warning", err, "error", 6000);
                },
                function complete() {
                    task.snapshot.ref.getDownloadURL()
                        .then(function (downloadURL) {
                            logo = downloadURL;
                            edit_category(logo)
                        })
                });
        }
    }

    function edit_category(logo) {
        const Toast = Swal.mixin({
            toast: true,
            position: 'top-end',
            showConfirmButton: false,
            timer: 3000,
            timerProgressBar: true,
            didOpen: (toast) => {
                toast.addEventListener('mouseenter', Swal.stopTimer)
                toast.addEventListener('mouseleave', Swal.resumeTimer)
            }
        })

        var cat_id = $("#edit_Id").val();
        var color = $("#edit_cat_color").val();
        var url = $("#edit_cat_url").val();

        if (color.trim() == "") {
            Toast.fire({
                icon: 'warning',
                title: 'Please select the color!'
            })
            $('#editCategoryButton').css('pointer-events', 'all');
        }
        else {
            const colorCode = color.slice(1);

            if (logo == "") {
                db.collection("categories").doc(cat_id).update({
                    color: colorCode,
                }).then(() => {
                    Swal.fire({
                        icon: 'success',
                        title: 'Category updated',
                        showConfirmButton: false,
                        timer: 1500
                    }).then(function () {
                        $('#editCategoryButton').css('pointer-events', 'all');
                        $('#editCategoryModal').modal("hide");
                        document.getElementById('form_edit_category').reset();
                    })
                })
            }
            else {


                var httpsReference = storageRef.refFromURL(url);
                let fileName = httpsReference.name;

                // Delete the file
                var desertRef = storageRef.ref().child('categories/' + fileName);
                desertRef.delete().then(() => {
                    db.collection("categories").doc(cat_id).update({
                        color: colorCode,
                        url: logo,
                    }).then(() => {
                        Swal.fire({
                            icon: 'success',
                            title: 'Category updated',
                            showConfirmButton: false,
                            timer: 1500
                        }).then(function () {
                            $('#editCategoryButton').css('pointer-events', 'all');
                            $('#editCategoryModal').modal("hide");
                            document.getElementById('form_edit_category').reset();
                        })
                    });
                }).catch((error) => {
                    // Uh-oh, an error occurred!
                });
            }
        }
    }

    //edit tag
    $(document).on("click", ".edit", function () {
        var categoryId = $(this).data('catid');

        $("#edit_tag_Id").val($(this).data('id'));
        $("#edit_cat_Id").val($(this).data('catid'));

        $("#edit_color").val("#" + $(this).data('color'));
        $("#edit_name").val($(this).data('name'));
        var font = $(this).data('font');

        $("#edit_font_style").val(font).change();
        $('#editTag').modal("show");
    });
    function edit_tag() {
        const Toast = Swal.mixin({
            toast: true,
            position: 'top-end',
            showConfirmButton: false,
            timer: 3000,
            timerProgressBar: true,
            didOpen: (toast) => {
                toast.addEventListener('mouseenter', Swal.stopTimer)
                toast.addEventListener('mouseleave', Swal.resumeTimer)
            }
        })

        $('#editTagButton').css('pointer-events', 'none');


        var cat_id = $("#edit_cat_Id").val();
        var id = $("#edit_tag_Id").val();
        var color = $("#edit_color").val();
        var name = $("#edit_name").val();
        var font = $("#edit_font_style").val();

        if (color.trim() == "") {
            Toast.fire({
                icon: 'warning',
                title: 'Please select the color!'
            })
            $('#editTagButton').css('pointer-events', 'all');
        }
        else if (name.trim() == "") {
            Toast.fire({
                icon: 'warning',
                title: 'Please select the name!'
            })
            $('#editTagButton').css('pointer-events', 'all');
        }
        else {
            db.collection('categories').doc(cat_id).get().then((doc) => {

                var data = doc.data();
                var tag = data.tags;

                const colorCode = color.slice(1);

                id = parseInt(id) - 1;
                var tagIndex = tag[id];
                tagIndex.color = colorCode;
                tagIndex.font_family = font;
                tagIndex.name = name;

                tag[id] = tagIndex;

                db.collection("categories").doc(cat_id).update({
                    tags: tag,
                }).then(() => {
                    Swal.fire({
                        icon: 'success',
                        title: 'Tag updated',
                        showConfirmButton: false,
                        timer: 1500
                    }).then(function () {
                        $('#editTagButton').css('pointer-events', 'all');
                        $('#editTag').modal("hide");

                        showtags(cat_id);
                    });
                })
            })
        }
    }

    $(document).on("click", ".addTagModal", function () {
        $("#add_tag_cat_Id").val($(this).data('id'));
        $('#addTag').modal("show");
    });

    function addTagFunction() {

        const Toast = Swal.mixin({
            toast: true,
            position: 'top-end',
            showConfirmButton: false,
            timer: 3000,
            timerProgressBar: true,
            didOpen: (toast) => {
                toast.addEventListener('mouseenter', Swal.stopTimer)
                toast.addEventListener('mouseleave', Swal.resumeTimer)
            }
        })

        $('#addTagButton').css('pointer-events', 'none');

        var catId = $("#add_tag_cat_Id").val();
        var color = $("#add_tag_color").val();
        var name = $("#add_tag_name").val();
        var font = $("#add_tag_font_style").val();

        if (color.trim() == "") {
            Toast.fire({
                icon: 'warning',
                title: 'Please select the color!'
            })
            $('#addTagButton').css('pointer-events', 'all');
        }
        else if (name.trim() == "") {
            Toast.fire({
                icon: 'warning',
                title: 'Please select the name!'
            })
            $('#addTagButton').css('pointer-events', 'all');
        }
        else {
            db.collection('categories').doc(catId).get().then((doc) => {

                var data = doc.data();
                var tag = data.tags;

                const colorCode = color.slice(1);

                var newTag = {
                    color: colorCode,
                    font_family: font,
                    name: name,
                    id: tag.length,
                    count: 1,
                };

                tag.push(newTag);

                db.collection("categories").doc(catId).update({
                    tags: tag,
                }).then(() => {
                    Swal.fire({
                        icon: 'success',
                        title: 'Tag added',
                        showConfirmButton: false,
                        timer: 1500
                    }).then(function () {
                        $('#addTagButton').css('pointer-events', 'all');
                        $('#addTag').modal("hide");
                        document.getElementById('addtagForm').reset();

                        showtags(catId);
                    });
                })
            })
        }
    }
    function status(elem, val) {
        var id = elem;

        var type = val;
        if (type == 2) {
            swal.fire({
                title: 'Are you sure, you want to unblock the category?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, Unblock it!',
                allowOutsideClick: false

            }).then((result) => {
                if (result.isConfirmed) {

                    db.collection("categories").doc(id).update({
                        status: true,
                    }).then(() => {
                        swal.fire('Unblocked!',
                            'Category is unblocked.',
                            'success')
                    })
                        .catch((error) => {
                            console.error("Error writing document: ", error);
                        });

                }
            });
        }

        else {

            swal.fire({
                title: 'Are you sure, you want to block the category?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, Block it!',
                allowOutsideClick: false
            }).then((result) => {
                if (result.isConfirmed) {

                    db.collection("categories").doc(id).update({
                        status: false,
                    })
                        .then(() => {
                            swal.fire('Blocked!',
                                'Category is blocked.',
                                'success');
                        })
                        .catch((error) => {
                            console.error("Error writing document: ", error);
                        });
                }
            });
        }
    }

    $("#all").click(function () {

        var table = $('#example_4').DataTable();
        $.fn.dataTable.ext.search.pop();
        table.draw();
        $.fn.dataTable.ext.search.push(
            function (settings, data, dataIndex) {
                return $(table.row(dataIndex).node()).attr('data-attribute') == 1 || 2;
            }
        );
        table.draw();

    });
    $("#insta").click(function () {

        var table = $('#example_4').DataTable();
        $.fn.dataTable.ext.search.pop();
        table.draw();
        $.fn.dataTable.ext.search.push(
            function (settings, data, dataIndex) {
                return $(table.row(dataIndex).node()).attr('data-attribute') == 2;
            }
        );
        table.draw();
    });
    $("#post").click(function () {

        var table = $('#example_4').DataTable();
        $.fn.dataTable.ext.search.pop();
        table.draw();
        $.fn.dataTable.ext.search.push(
            function (settings, data, dataIndex) {
                return $(table.row(dataIndex).node()).attr('data-attribute') == 1;
            }
        );
        table.draw();
    });
</script>